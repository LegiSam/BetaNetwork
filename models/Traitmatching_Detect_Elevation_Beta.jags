
    model {
    
    #Ecological Process Model
    #True State for each bird, plant, camera
    for (i in 1:Birds){
    for(j in 1:Plants){
    for(k in 1:Cameras){
    
    #Occurrence 
    logit(psi[i,j,k])<-alpha_occ[i] + beta_occ[i] * elevation[k] + beta2_occ[i] * elevation[k]^2
    occ[i,j,k] ~ dbern(psi[i,j,k])
    
    #Interaction
    logit(s[i,j,k])<-alpha[i] + beta_trait[i] * Traitmatch[i,j] + beta_season[i] *Season[k] + beta_int[i] *Season[k] *  Traitmatch[i,j]  
    
    #Conditional probability of interaction|occurrence
    rho[i,j,k] <- s[i,j,k] * occ[i,j,k]
    }
    }
    }
    
    #Observation Model
    for (x in 1:Nobs){
    
    #Detection Process
    z[x] ~ dbern(detect[Bird[x]]) 
    
    #Observation, conditional on detection and occurrence.
    p[x]<-z[x] * rho[Bird[x],Plant[x],Camera[x]]
    Yobs[x] ~ dbern(p[x])
    
    #Observed discrepancy
    #E[x]<-abs(Yobs[x]- s[Bird[x],Plant[x],Camera[x]])
    }
    
    #Assess Model Fit - Predict remaining data
    
    for(x in 1:Nnewdata){
    
    #Generate prediction
    znew[x] ~ dbern(detect[NewBird[x]])
    pnew[x] <- znew[x]*rho[NewBird[x],NewPlant[x],NewCamera[x]]
    
    #Predicted observation
    Ynew_pred[x]~dbern(pnew[x])
    
    #Assess fit, proportion of corrected predicted links
    Enew[x]<-abs(Ynew[x]-Ynew_pred[x])
    
    }
    
    #Priors
    
    #Occurrence model
    for(x in 1:Birds){
    alpha_occ[x] ~ dnorm(0,0.386)
    beta_occ[x] ~ dnorm(0,0.386)
    beta2_occ[x] ~ dnorm(0,0.386)
    }
    
    #Observation model
    #Detect priors, logit transformed - Following lunn 2012 p85
    for(x in 1:Birds){
    logit(detect[x])<-dcam[x]
    dcam[x]~dnorm(omega_mu,omega_tau)
    }
    
    #Process Model
    for (i in 1:Birds){
        
        #Interaction probability
        alpha[i] ~ dnorm(0,0.386)
        
        #Effect of season
        beta_trait[i] ~ dnorm(0,0.386)
        beta_season[i] ~ dnorm(0,0.386)
        beta_int[i] ~ dnorm(0,0.386)
    }
    
    
    #Observation group prior
    omega_mu ~ dnorm(0,0.386)
    omega_tau ~ dunif(0,10)
    
    #derived posterior predictive check
    #fitnew<-sum(Enew[])
    
    }
    
